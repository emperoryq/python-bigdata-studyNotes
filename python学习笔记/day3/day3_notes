笔记
1. 猜拳游戏
   a. 两个角色  玩家 player  - 电脑 robot
   b. 动作: 石头 0 , 剪刀 1,  布 2
   c. 我的出拳: 由输入完成
   d. 电脑的出拳: 随机数完成
   e. 比较出拳
   f. 相等 - 平局
   g. 玩家赢: p0:r1  p1:r2  p2:r0
   h. 剩下的情况就是电脑赢

2. if 语句实现三目运算符(了解)

	c语言: 条件? 值1 : 值2
	
	python实现:
		值1 if 条件 else 值2
		
		执行过程:
		判断 条件是否成立,如果条件成立,那么得到值1, 否则得到值2
	
	
	
3. 循环语句 while
	程序分为三种执行结构 :
	a. 顺序结构  -> 从上至小,顺序执行
	b. 分支结构  -> 根据条件是否成立,选择不同的代码执行
	c. 循环结构  -> 一段代码会重复执行多次
	
	
	循环四要素:
		a. 循环变量初始值
		b. 循环条件
		c. 循环体代码
		d. 让循环变量趋近于结束条件的代码
		
	循环执行过程:
		以上方描述的 abcd 做为过程
		a -> b -> c -> d -> b -> c -> d -> b -> c -> d ->..... b(不满足条件,退出循环)
		
		
		
	while格式:
	
	while 条件:
		循环体代码




4. break
	1.break 只能用在循环里
	2.break 的作用是用来结束循环,不管循环还有多少次

5. continue
	1. continue 也只能用在循环里
	2. continue 的作用是用来结束本次循环,不管循环体中还有多少代码没有执行,进入下一次循环

6. while 循环嵌套
	
	while 条件1:
		while 条件2:
			循环体...

	执行过程：
		外层循环循环一次，内层循环循环一圈
	


7. 打印正方形
	* * * * *
	* * * * *
	* * * * *
	* * * * *
	* * * * *

8. 打印三角形
	*
	**
	***
	****
	*****

9. 打印九九乘法表
	1*1=1
	1*2=2  2*2=4
	1*3=3  2*3=6 3*3=9

	...
	1*9=9 ..... 9*9=81

10. for-in 循环& range
  	 for-in 是一种增强型循环
  	 range()用来取一个范围

  	 格式：

  	 for 循环变量 in range(a, b):
  	 		循环代码

  	 	执行过程：
  	 		range(a, b) -> [a, b) -> a ~ b-1

  	 	for 会从range 中得到的数列中，依次取出数字放到循环变量


11. for-in-else
	 while-else

	 无论是 for-in-else
	 还是   while-else
	 都是在执行完循环后，正常结束后，执行else后的代码
	 如果循环遇到 break 被中断执行，那么不会执行else后的代码
	
	
12. 字符串定义和下标
	字符串的概念: 以引号引起来的若干字符 
	定义方式:
		1. 'Hello'
		2. "hello"
		3. '''hello'''
		4. """hello"""
		

	下标:
		字符串中每个字符的编号
		字符串的下表范围是 0~字符串字符个数-1

		abcd
		0123

	通过下标访问字符串中字符的格式：
		字符串变量名[下标]
		字符串[下标]
		


13. 字符串的遍历
	遍历: 依次访问字符串中的每一个字符

	方式一:
		for c in s:
			print(c)

	方式二:
		字符串的长度 = len(字符串)
		for i in range(len(字符串)):
			print(s[i])

	方式三:
		i = 0
		while i < len(字符串):
			print(s[i])
			i += 1





14. 字符串切片

	切片作用：通过指定下标，可以获取字符串中的某一字段

	格式：
	字符串或字符串变量[起始下标：结束下标：步长]

	切片实现字符串逆序：
	s[::-1]

	切片时，起始下标和结束下标都可以使用负数
	负数表示从右往左编号，第一个字符是-1

	a 	  b    c    d    e   f
	-6   -5   -4   -3   -2  -1
	''[::-1]
	s = ''
	''[::-1]
 

15. 字符串常用方法
	a.查找_替换_统计
		find()  掌握
		rfind() 了解
		index() 了解
		rindex() 了解 
		replace() 掌握
		count()	掌握

	b. 分割_连接
		split()	掌握
		partition() 了解
		rpartition() 了解
		splitlines() 了解
		join() 掌握

	c. 判断
		startswith() 掌握
		endswith()   掌握
		isupper()	 了解 
		islower()
		isdigit()
		isalpha()
		isalnum()
		isspace()


	d. 转换 (了解)
		upper()
		lower()
		title()
		capitalize()

	e. 对齐(了解)
		center()
		rjust()
		ljust()

	f. 去除空白(了解)
		strip()
		lstrip()
		rstrip()

API 应用程序接口文档
Application Interface
