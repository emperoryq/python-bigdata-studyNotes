
10. 用户操作
	添加用户:
		sudo useradd -m username
		-m 选项用来在创建用户时,为用户在home目录下创建一个同名家目录,如果不指定不创建
		-g 用来指定用户所属组,不指定时,默认加入到与用户名同名的组里
		
		/etc/passwod  文件,用来保存用户的信息
		/etc/shadow  文件,用来保存用户的密码,密码是加密后的密码
		/etc/group   文件,用来保存系统中的所有组
		
	查看用户id信息
		id username
		
	切换用户
	 	su - username
	 	- 有该选项时,会切换到指定的用户环境下
	 	
	删除用户
		sudo userdel -r username
		-r 作用是删除用户时,同时删除用户的家目录
		
			
	
	
11. 用户组操作
	sudo groupadd groupname
	sudo groupdel groupname
	
	注意:
		如果创建的组作为某个用户的主组时,不能直接删除该组,必须先将使用该组做为主组用户删除再删除该组
		

12. 远程操作ssh 和 scp

	在使用ssh时,如果允许别人连接你时,需要在你的电脑上安装 ssh 服务器
	使用下面的命令
	sudo apt-get install openssh-server
	
	
	ssh username@ip 
	
	远程复制
	上传文件
	scp 本地文件 username@ip:远端主机路径
	
	下载下文件
	scp username@ip:远端主机资源路径  本地路径
	

13. vim

	三种模式:  
		a. 命令模式
		b. 编辑模式
		c. 末行模式
		
	从命令模式到编辑模式可以使用 
		i 在当前光标位置处插入
		a 在当前光标下一个字符位置处插入
		o 在当前光标所在行的下一行插入一个空行
		
		退出编辑模式使用 esc 键
		
	从命令模式到编辑模式的替换操作
	r 替换一个字符, 按一次r键,再按需要替换的内容字符
	R 进入到替换模式下,会进入持续替换
	
	
	末行模式
		保存文件  		:w   
		强制保存文件  	:w!
		退出文件  		:q
		强制退出文件 		:q!
		保存并退出1   	:wq
		保存并退出2		:x
		
		设置行号  :set nu
		取消行号  :set nonu
		开启语法高亮  :syntax on
		
		
	命令模式:
	
	yy 复制一行
	nyy  复制n行
	p  在光标处粘贴
	np 在光标处粘贴n次
	dd 删除一行
	ndd 删除n行
	
	移动
	h 向左
	j 向下
	k 向上
	l 向右
	
	gg 移动到首行
	G 移动到末行
	nG 移动指定行
	$ 移动到行尾
	0 移动到行首
	
	u 撤消
	ctrl + r 反撤消
	
	x 向后删除一个字符
	X 向前删除一个字符
	
	>> 向右缩进
	<< 向左缩进
	
	
	查找 
	/查找内容  
		n 跳到下一个
		N 跳到上一个
		
	?查找内容
		n 跳到上一个
		N 跳到下一个
	

14. 软件安装与卸载

	离线安装和卸载
	dpkg -i / -r 软件名
	
	在线安装
	1. 更数据软件源
	
	2. apt / apt-get install/remove 软件名



1. 多任务介绍
	多任务为提高程序的执行效率
	并发
	并行

2. 进程的介绍 
	mulitprocessing 包
	
3. 进程的使用
	
	1. 导入包
	2. 定义任务功能函数
	3. 创建子进程
	4. 启动子进程
	
4. 进程的当前进程对象并设置进程名和进程编号
	获取当前进程编号
	os.getpid()

	获取当前父进程编号
	os.getppid()

	获取进程编号可以查看父子进程的关系

	获取当前进程对象
	multimprocessing.current_process()
	
	这条语句写在哪个进程的任务函数中,就获取哪个进程


5. 进程执行带有参数的任务

	args=(xx,)
	kwargs={}
	
	
6. 进程之间不共享全局变量
	进程时程序运行时分配资源的基本单位
	
	创建子进程时,会复制父进程的资源
	
7. 主进程会等待所有的子进程执行完成以后主进程再退出
	1. 子进程对象.teminate()
	2. 在子进程开始前,设置守护主进程
		子进程对象.daemon = True
		
	设置成守护进程后,如果主进程结束,那么子进程也跟着结束






9. 线程介绍 

10. 线程的使用

11. 线程执行带有参数的任务

12. 线程之间执行是无序的

13. 主线程会等待所有的子线程执行完成以后再结束

14. 线程之间共享全局变量

15. 线程之间共享全局变量数据错误问题